const questions = [

    {   
        question:
         "What type of clouds that look like floating cotton balls? It's usually a sign of good weather.?",
        optionA: "Cumulus",
        optionB: "Cirrus",
        optionC: "Nimbostratus",
        optionD: "Stratus.",
        correctOption: "optionA",
        imagee:'assets/img/cumulus.png',
        identt:'cumulus',
        doc:"Cumulus clouds are the puffy clouds that look like puffs of cotton. Cumulus clouds that do not get very tall are indicators of fair weather. If they do grow tall, they can turn into thunderstorms. The bottom of cumulus clouds are fairly close to the ground.",
        
    },

    {
        question: "Which type of clouds bring rain?",
        optionA: "Cumulus",
        optionB: "Contrails",
        optionC: "Nimbostratus",
        optionD: "Cirrus",
        correctOption: "optionC",
        imagee:'assets/img/Nimbostratus.png',
        identt:'nimostratus',
        doc: "Nimbostratus clouds are dark, grey, featureless layers of cloud, thick enough to block out the Sun. Producing persistent rain, these clouds are often associated with frontal systems provided by mid-latitude cyclones. These are probably the least picturesque of all the main cloud types."
    },

    {
        question: "These are high clouds that are composed of ice crystals:",
        optionA: "Cumulus",
        optionB: " Nimbostratus",
        optionC: "Altocumulus",
        optionD: "Cirrus",
        correctOption: "optionD",
        imagee:'assets/img/cirrus.png',
        identt:'cirrus',
        doc: 'Cirrus clouds are thin clouds made of ice crystals that form very high in the sky, above 18,000 feet. These clouds are the highest clouds, and the temperature at the height where they form is about 36 degrees Celsius below zero, which is why they are made of ice crystals.'
    },

    {
        question: "What do stratocumulus clouds indicate?",
        optionA: "Snow",
        optionB: "No rain",
        optionC: "Storms",
        optionD: "Rare but light precipitation",
        correctOption: "optionD",
        imagee:'assets/img/stratocumulus.png',
        identt:'stratocumulus',
        doc:"Stratocumulus clouds are low, puffy and gray. Most form in rows with blue sky visible in between them. Rain rarely occurs with stratocumulus clouds, however, they can turn into nimbostratus clouds."
        
    },

    {
        question: "The clouds associated with thunderstorms are calledâ€¦",
        optionA: "Cirrus",
        optionB: "Stratus",
        optionC: "Cumulonimbus",
        optionD: "Cumulus ",
        correctOption: "optionC",
        imagee:'assets/img/cumulonimbus.png',
        identt:'cumulonimbus',
        doc: "Cumulonimbus clouds are large, tall clouds that are dark on the bottom and usually produce rain and thunderstorms. In fact, they are sometimes called thunderstorm clouds, but they can also bring different kinds of weather, including hail and snow showers, which might even get you out of school for a snow day!"
    },
    {
        question: "These clouds appear in blanket-like layers.",
        optionA: "Cirrus",
        optionB: "Stratus",
        optionC: "Cumulonimbus",
        optionD: "Cumulus ",
        correctOption: "optionB",
        imagee:'assets/img/stratus.png',
        identt:'stratus',
        doc: "Stratus clouds are low altitude gray clouds that make a flat base. The name comes from the Latin word stratus, which means to stretch or extend. You can see stratus clouds as thick cloud blankets near the sea. They are sometimes called high fogs. Light rain and drizzle often fall from stratus clouds."
    },
    {
        question: "Clouds that are condensation left behind by jet planes:",
        optionA: "Cirrus ",
        optionB: "Altostratus",
        optionC: "Contrails",
        optionD: "Fog ",
        correctOption: "optionC",
        imagee:'assets/img/contrails.png',
        identt:'contrails',
        doc: "Contrails form when hot humid air from jet exhaust mixes with environmental air of low vapor pressure and low temperature. The mixing is a result of turbulence generated by the engine exhaust."
    },
    {
        question: " What type of cloud is an altocumulus cloud?",
        optionA: "Low-level",
        optionB: "Mid-level",
        optionC: "High-level",
        optionD: "Ice",
        correctOption: "optionB",
        imagee:'assets/img/altocumulus.png',
        identt:'altocumulus',
        doc: "Altocumulus clouds are mid level clouds that are made of water droplets and appear as gray puffy masses."
    },
    {
        question: "What are the clouds nicknamed 'mackerel sky' and tell us that a storm is on the way?",
        optionA: "Cirrus ",
        optionB: "Cumulus",
        optionC: "Cirrocumulus",
        optionD: "Stratus ",
        correctOption: "optionC",
        imagee:'assets/img/cirrocumulus.png',
        identt:'cirrocumulus',
        doc: "Cirrocumulus clouds appear as small, rounded white puffs that appear in long rows. The small ripples in the cirrocumulus clouds sometime resemble the scales of a fish. Cirrocumulus clouds are usually seen in the winter and indicate fair, but cold weather. In tropical regions, they may indicate an approaching hurricane."
    },
    {
        question: "Cloud from the middle level of the troposphere forming a vast veil, however, allowing the sun to be seen",
        optionA: "Stratus",
        optionB: " Altostratus",
        optionC: "cirrocumulus",
        optionD: "Cumulus",
        correctOption: "optionB",
        imagee:'assets/img/altostartus.png',
        identt:'altostratus',
        doc: "Altostratus clouds are gray or blue-gray mid level clouds composed of ice crystals and water droplets. The clouds usually cover the entire sky. In the thinner areas of the clouds, the sun may be dimly visible as a round disk. Altostratus clouds often form ahead of storms with continuous rain or snow."
    },

    


]

let documentation =["premiere doc","deuxieme doc","troisieme doc", "quatrieme doc"]
let shuffledQuestions = [] //empty array to hold shuffled selected questions out of all available questions

function handleQuestions() { 
    //function to shuffle and push 10 questions to shuffledQuestions array
//app would be dealing with 10questions per session
    while (shuffledQuestions.length <= 9) {
        const random = questions[Math.floor(Math.random() * questions.length)]
        if (!shuffledQuestions.includes(random)) {
            shuffledQuestions.push(random)
        }
    }
}

let questionNumber = 1 //holds the current question number
let playerScore = 50  //holds the player score
let wrongAttempt = 0 //amount of wrong answers picked by player
let indexNumber = 0 //will be used in displaying next question
// function for displaying next question in the array to dom
//also handles displaying players and quiz information to dom
function NextQuestion(index) {
    handleQuestions()
    const currentQuestion = shuffledQuestions[index]
    document.getElementById("question-number").innerHTML = questionNumber
    document.getElementById("player-score").innerHTML = playerScore
    document.getElementById("display-question").innerHTML = currentQuestion.question;
    document.getElementById("option-one-label").innerHTML = currentQuestion.optionA;
    document.getElementById("option-two-label").innerHTML = currentQuestion.optionB;
    document.getElementById("option-three-label").innerHTML = currentQuestion.optionC;
    document.getElementById("option-four-label").innerHTML = currentQuestion.optionD;

}
function checkForAnswer() {
    const currentQuestion = shuffledQuestions[indexNumber] //gets current Question 
    const currentQuestionAnswer = currentQuestion.correctOption //gets current Question's answer
    const options = document.getElementsByName("option"); //gets all elements in dom with name of 'option' (in this the radio inputs)
    let correctOption = null
    
    
   
    options.forEach((option) => {
        if (option.value === currentQuestionAnswer) {
            //get's correct's radio input with correct answer
            correctOption = option.labels[0].id
        }
       
    })
    //checking to make sure a radio input has been checked or an option being chosen
    if (options[0].checked === false && options[1].checked === false && options[2].checked === false && options[3].checked == false) {
        document.getElementById('option-modal').style.display = "flex"
    }
   

    //checking if checked radio button is same as answer
   
    options.forEach((option) => {
        if (option.checked === true && option.value === currentQuestionAnswer) {
            document.getElementById(correctOption).style.backgroundColor = "green"
            playerScore+=100 //adding to player's score
            
            
            setTimeout(() => {
            document.getElementById('doc-modal').style.display = "flex"  
        }, 1000)  
             
                
            indexNumber++;//adding 1 to index so has to display next question..
            
            //set to delay question number till when next question loads
            setTimeout(() => {
               
                questionNumber++
            }, 1000)
            
            document.getElementById(currentQuestion.identt).src= currentQuestion.imagee ;
            document.getElementById("1").innerHTML=currentQuestion.doc;
             
           
          
           
           
        }

         else if (option.checked && option.value !== currentQuestionAnswer) {
            const wrongLabelId = option.labels[0].id
            document.getElementById(wrongLabelId).style.backgroundColor = "red"
           // document.getElementById(correctOption).style.backgroundColor = "green"
            wrongAttempt++ //adds 1 to wrong attempts 
            //indexNumber++
            playerScore-=50
            
            //set to delay question number till when next question loads
            document.getElementById('reanswer-modal').style.display = "flex"
            setTimeout(() => {
                //questionNumber++
            }, 1000) 
           
        }
    })
}




//called when the next button is called
function handleNextQuestion() {
    //checkForAnswer() //check if player picked right or wrong option
  
    unCheckRadioButtons()
    //delays next question displaying for a second just for some effects so questions don't rush in on player
    setTimeout(() => {
        if (indexNumber <= 9) {
//displays next question as long as index number isn't greater than 9, remember index number starts from 0, so index 9 is question 10
            NextQuestion(indexNumber)
            
        }
        else {
            handleEndGame()//ends game if index number greater than 9 meaning we're already at the 10th question
        }
        resetOptionBackground()
    }, 1000);

}
//called when the submit button is called
function handleSubmitQuestion() {
    checkForAnswer() //check if player picked right or wrong option
    unCheckRadioButtons()
   
   
    

}
//sets options background back to null after display the right/wrong colors
function resetOptionBackground() {
    const options = document.getElementsByName("option");
    options.forEach((option) => {
        document.getElementById(option.labels[0].id).style.backgroundColor = ""
    })
}

// unchecking all radio buttons for next question(can be done with map or foreach loop also)
function unCheckRadioButtons() {
    const options = document.getElementsByName("option");
    for (let i = 0; i < options.length; i++) {
        options[i].checked = false;
    }
}
// function for when all questions being answered
function handleEndGame() {
    let remark = null
    let remarkColor = null
    

    // condition check for player remark and remark color
    if (playerScore <= 3) {
        remark = "Bad Grades, Keep Practicing."
        remarkColor = "red"
    }
    else if (playerScore >= 4 && playerScore < 7) {
        remark = "Average Grades, You can do better."
        remarkColor = "orange"
    }
    else if (playerScore >= 7) {
        remark = "Excellent, Keep the good work going."
        remarkColor = "green"
    }
    const playerGrade = (playerScore / 10) * 100

    //data to display to score board
    document.getElementById('remarks').innerHTML = remark
    document.getElementById('remarks').style.color = remarkColor
    document.getElementById('grade-percentage').innerHTML = playerGrade
    document.getElementById('wrong-answers').innerHTML = wrongAttempt
    document.getElementById('right-answers').innerHTML = playerScore
    document.getElementById('score-modal').style.display = "flex"

}

//closes score modal, resets game and reshuffles questions
function closeScoreModal() {
    questionNumber = 1
    playerScore= 0
    wrongAttempt = 0
    indexNumber = 0
    shuffledQuestions = []
    NextQuestion(indexNumber)
    document.getElementById('score-modal').style.display = "none"
}

//function to close warning modal
function closeOptionModal() {
    document.getElementById('option-modal').style.display = "none"
}
//function to close doc modal
function closeDocModal() {
    document.getElementById('doc-modal').style.display = "none"
}
//function to close reanswer modal
function closeReanswerModal() {
    document.getElementById('reanswer-modal').style.display = "none"
}